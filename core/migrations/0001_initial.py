# Generated by Django 5.1.4 on 2025-01-10 03:57

import core.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TreasureHunt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, help_text='Main image of the treasure hunt', null=True, upload_to=core.models.hunt_image_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='End date of the treasure hunt', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True)),
                ('points_per_clue', models.IntegerField(default=10, help_text='Points awarded for completing each clue')),
                ('completion_points', models.IntegerField(default=50, help_text='Points awarded for completing the entire hunt')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_create_hunts', 'Can create treasure hunts')],
            },
        ),
        migrations.CreateModel(
            name='Clue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.IntegerField()),
                ('hint_text', models.TextField()),
                ('unlock_message', models.TextField(default='Congratulations! You have unlocked a new clue.', help_text='Message displayed when the user unlocks this clue.')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('reference_image', models.ImageField(max_length=255, upload_to=core.models.clue_image_path)),
                ('image_embedding', models.JSONField(blank=True, help_text='LLM embedding of the reference image', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('treasure_hunt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clues', to='core.treasurehunt')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('total_points', models.IntegerField(default=0, help_text='Total points earned in this hunt')),
                ('current_clue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.clue')),
                ('treasure_hunt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.treasurehunt')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'treasure_hunt')},
            },
        ),
    ]
